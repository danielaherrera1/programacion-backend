<!--<script src="https://cdn.socket.io/4.6.0/socket.io.min.js"
integrity="sha384-c79GN5VsunZvi+Q/WObgk2in0CbZsHnjEqvFxC5DxHn9lTfNce2WW6h2pH6u/kF+"
crossorigin="anonymous"></script>-->
<script src="/socket.io/socket.io.js"></script>

<h1 class="chatTitle">Listado de productos en vivo</h1>

<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Categoria</th>
            <th>Titulo</th>
            <th>Descripción</th>
            <th>Codigo</th>
            <th>Precio</th>
            <th>stock</th>

        </tr>
    </thead>
    <tbody id="listaProductos">
        {{#each allProducts}}
        <tr>
            <td>{{this.id}}</td>
            <td>{{this.category}}</td>
            <td>{{this.title}}</td>
            <td>{{this.description}}</td>
            <td>{{this.code}}</td>
            <td>{{this.price}}</td>
            <td>{{this.stock}}</td>
        </tr>
        {{/each}}
    </tbody>
</table>

<h1>Agregar Producto</h1>
<form id="agregar-producto-form" enctype="multipart/form-data">
    <label for="title">Título:</label>
    <input type="text" id="title" name="title" required><br>

    <label for="description">Descripción:</label>
    <textarea id="description" name="description" required></textarea><br>

    <label for="code">Código:</label>
    <input type="text" id="code" name="code" required><br>

    <label for="price">Precio:</label>
    <input type="number" id="price" name="price" step="0.01" required><br>

    <label for="status">Estado:</label>
    <select id="status" name="status">
        <option value="activo">Activo</option>
        <option value="inactivo">Inactivo</option>
    </select><br>

    <label for="stock">Stock:</label>
    <input type="number" id="stock" name="stock" required><br>

    <label for="category">Categoría:</label>
    <input type="text" id="category" name="category" required><br>

    <label for="image">Imagen:</label>
    <input type="file" id="image" name="image" accept="image/*"><br>

    <button type="submit">Agregar Producto</button>
</form>

<script>

    const socketconn = io();

    const form = document.getElementById('agregar-producto-form');
    form.addEventListener('submit', (e) => {
        e.preventDefault();

        const title = document.getElementById('title').value;
        const description = document.getElementById('description').value;
        const code = document.getElementById('code').value;
        const price = parseFloat(document.getElementById('price').value);
        const status = document.getElementById('status').value;
        const stock = parseInt(document.getElementById('stock').value);
        const category = document.getElementById('category').value;

        const imageFile = document.getElementById('image').files[0];
        const imageName = imageFile ? imageFile.name : null;

        const nuevoProducto = {
            title,
            description,
            code,
            price,
            status,
            stock,
            category,
            imageName, 
        };

        socketconn.emit('agregarProducto', nuevoProducto);

        socketconn.on('productoAgregado', (productos) => {

            const tableBody = document.getElementById('listaProductos');
            console.log("producto agregado")
            tableBody.innerHTML = '';
            productos.forEach((producto) => {
                const row = tableBody.insertRow();
                const cellId = row.insertCell(0);
                const cellCategory = row.insertCell(1);
                const cellTitle = row.insertCell(2);
                const cellDescription = row.insertCell(3);
                const cellCodigo = row.insertCell(4);
                const cellPrecio = row.insertCell(5);
                const cellStock = row.insertCell(6);

                cellId.innerHTML = producto.id;
                cellCategory.innerHTML = producto.category;
                cellTitle.innerHTML = producto.title;
                cellDescription.innerHTML = producto.description;
                cellCodigo.innerHTML = producto.code;
                cellPrecio.innerHTML = producto.price;
                cellStock.innerHTML = producto.stock;
                

            });
        });
   /*    fetch('/products', {
            method: 'POST',
            headers: {
               'Content-Type': 'application/json',
           },
            body: JSON.stringify(nuevoProducto)
        }).then((response) => {
            if (!response.ok) {
                throw new Error('Error en la solicitud.');
            }
            return response.json(); 
        })*/

        form.reset();
    });

   
</script>